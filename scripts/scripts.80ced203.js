"use strict";function getLocalToken(){return localStorage.authToken}function getHttpConfig(){return{headers:{"X-Auth-Token":getLocalToken()}}}function getAuthenticateHttpConfig(){return{ignoreAuthModule:!0}}var client=angular.module("scrumClientApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","http-auth-interceptor","mgcrea.ngStrap"]);client.value("apiUrl","http://grails-restful.herokuapp.com/v2/api"),client.config(["$routeProvider",function(a){a.when("/login",{templateUrl:"views/main.html",controller:"MainCtrl"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl"}).when("/projects",{templateUrl:"views/project-list.html",controller:"ProjectCtrl"}).otherwise({redirectTo:"/"})}]),client.run(["$rootScope","$http","$location",function(a,b,c){b.defaults.headers.common["X-AUTH-TOKEN"]=getLocalToken(),a.$on("event:auth-loginRequired",function(){console.log("showing login form"),c.path("/login")}),a.$on("event:auth-loginFailed",function(){console.log("showing login error message"),$("#login-error").show()}),a.$on("event:auth-loginConfirmed",function(){console.log("redirecting to home"),b.defaults.headers.common["X-AUTH-TOKEN"]=getLocalToken(),c.path("/")}),a.$on("event:auth-logoutRequest",function(){console.log("Logging out user"),delete b.defaults.headers.common["X-AUTH-TOKEN"],a.isAuthenticated=!1,a.currentUser=null,sessionStorage.clear(),c.path("/login")})}]),angular.module("scrumClientApp").controller("MainCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("scrumClientApp").controller("AboutCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("scrumClientApp").directive("showLogin",function(){return{restrict:"C",link:function(a,b){var c=b.find("#login-holder"),d=b.find("#login-error"),e=b.find("#content"),f=b.find("#username"),g=b.find("#password");console.log(c),console.log(d),c.hide(),d.hide(),a.$on("event:auth-loginRequired",function(){console.log("showing login form"),e.hide(),f.val(""),g.val(""),c.show()}),a.$on("event:auth-loginFailed",function(){console.log("showing login error message"),f.val(""),g.val(""),d.show()}),a.$on("event:auth-loginConfirmed",function(){console.log("hiding login form"),e.show(),c.hide(),f.val(""),g.val("")})}}}),console.log("showLogin directive loaded...."),angular.module("scrumClientApp").controller("LoginCtrl",["$rootScope","$scope","$http","authService","apiUrl",function(a,b,c,d,e){console.log("loginController called"),console.log(e),b.logIn=function(){console.log("logIn called"),c.post(e+"/auth/login",{username:b.authData.username,password:b.authData.password},getAuthenticateHttpConfig).success(function(b){console.log("authentication token: "+b.token),localStorage.authToken=b.token,a.currentUser=b.username,d.loginConfirmed({},function(a){return a.headers["X-Auth-Token"]||(console.log("X-Auth-Token not on original request; adding it"),a.headers["X-Auth-Token"]=getLocalToken()),a})}).error(function(b){console.log("login error: "+b),a.$broadcast("event:auth-loginFailed",b)})}}]),console.log("LOGIN controllers load complete"),angular.module("scrumClientApp").controller("LogoutCtrl",["$scope","$http","$location","apiUrl",function(a,b,c,d){console.log("logoutController called"),console.log(d),a.logOut=function(){console.log("Lgout called"),b.post(d+"/auth/logout",{},getHttpConfig()).success(function(d){a.$broadcast("event:auth-logoutRequest",d),delete b.defaults.headers.common["X-AUTH-TOKEN"],a.currentUser=null,console.log("logout success"),localStorage.clear(),c.path("/")}).error(function(a){console.log("logout error: "+a),localStorage.clear()})}}]),console.log("LOGOUT controllers load complete"),angular.module("scrumClientApp").controller("ProjectCtrl",["$scope","$rootScope","$http","$location","apiUrl",function(a,b,c,d,e){var f=function(){console.log("call load()..."),c.get(e+"/projects.json").success(function(b){a.projects=b})};f(),a.addProject=function(){console.log("call addProject"),d.path("/new")},a.editProject=function(b){console.log("call editProject"),d.path("/edit/"+a.projects[b].id)},a.delProject=function(b){console.log("call delProject");var d=a.projects[b];c.delete(e+"/projects/"+d.id+".json").success(function(){f()}).error(function(){})}}]),console.log("Project controllers load complete");